{"version":3,"sources":["components/Header.js","components/Starship.js","components/Starships.js","components/utils/API.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","href","Starship","item","useState","hide","setHide","pilots","setPilots","pilotArr","noResults","name","useEffect","forEach","pilot","Axios","get","then","res","push","data","catch","err","console","log","onClick","join","Starships","state","starships","setState","results","this","map","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAYeA,MAVf,WACE,OACE,iCACE,sBAAKC,UAAU,QAAf,iCACsB,+BAAM,mBAAGC,KAAK,qBAAR,+B,2DCuCnBC,MAzCf,YAA6B,IAATC,EAAQ,EAARA,KAAQ,EACFC,oBAAS,GADP,mBACnBC,EADmB,KACbC,EADa,OAGEF,mBAAS,IAHX,mBAGnBG,EAHmB,KAGXC,EAHW,KAKpBC,EAAW,GAEXC,EAAS,0CAAsCP,EAAKQ,KAA3C,yBAoBf,OAlBAC,qBAAU,WACRT,EAAKI,OAAOM,SAAQ,SAACC,GACnBC,IAAMC,IAAIF,GACPG,MAAK,SAACC,GAAD,OAAST,EAASU,KAAKD,EAAIE,KAAKT,SACrCM,MAAK,kBAAMT,EAAUC,MACrBY,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,WAG/B,IAWD,sBAAKtB,UAAU,OAAf,UACE,4BAAIG,EAAKQ,OACT,wBAAQc,QAXa,WACvBnB,GAASD,IAUP,yBACA,sBAAKL,UAAWK,EAAO,cAAgB,SAAvC,UACE,4BAAIE,EAASA,EAAOmB,KAAK,MAAQhB,IACjC,wBAAQV,UAAU,YAAYyB,QAVhB,WAClBnB,GAASD,IASL,sBCEOsB,E,4MAlCbC,MAAQ,CACNC,UAAW,I,kEAGQ,IAAD,OCNbd,IAAMC,IAAI,oCDQZC,MAAK,SAACC,GACL,EAAKY,SAAS,CAAED,UAAWX,EAAIE,KAAKW,aAErCV,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,Q,+BAI9B,OACE,sBAAKtB,UAAU,gBAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,OAAf,SACE,8DAEF,8FAEDgC,KAAKJ,MAAMC,UAAUI,KAAI,SAAC9B,GAAD,OACxB,cAAC,EAAD,CAEEA,KAAMA,EACNQ,KAAMR,EAAKQ,KACXJ,OAAQJ,EAAKI,QAHRJ,EAAKQ,gB,GAxBEuB,aEUTC,MATf,WACE,OACI,sBAAKnC,UAAU,YAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCGOoC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrB,MAAK,YAAkD,IAA/CsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4c00e4d9.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <header>\r\n      <div className=\"title\">\r\n        Star Wars API using <span><a href=\"https://swapi.dev/\">swapi.dev</a></span>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\n// import Pilot from \"../components/Pilot\";\r\n\r\nfunction Starship({ item }) {\r\n  const [hide, setHide] = useState(true);\r\n  // eslint-disable-next-line\r\n  const [pilots, setPilots] = useState([]);\r\n\r\n  const pilotArr = [];\r\n\r\n  const noResults = `Sorry, there were no pilots for ${item.name}! Please try another.`;\r\n\r\n  useEffect(() => {\r\n    item.pilots.forEach((pilot) => {\r\n      Axios.get(pilot)\r\n        .then((res) => pilotArr.push(res.data.name))\r\n        .then(() => setPilots(pilotArr))\r\n        .catch((err) => console.log(err));\r\n    });\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const handleViewPilots = () => {\r\n    setHide(!hide);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setHide(!hide);\r\n  };\r\n\r\n  return (\r\n    <div className=\"ship\">\r\n      <p>{item.name}</p>\r\n      <button onClick={handleViewPilots}>View Pilots</button>\r\n      <div className={hide ? \"pilots hide\" : \"pilots\"}>\r\n        <p>{pilots ? pilots.join(\", \") : noResults}</p>\r\n        <button className=\"btn-close\" onClick={handleClose}>\r\n          X\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Starship;\r\n","import React, { Component } from \"react\";\r\nimport getStarships from \"./utils/API\";\r\nimport Starship from \"./Starship\";\r\n\r\nclass Starships extends Component {\r\n  state = {\r\n    starships: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    getStarships()\r\n      .then((res) => {\r\n        this.setState({ starships: res.data.results });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"starships-box\">\r\n        <div className=\"force\">\r\n          <div className=\"clip\">\r\n            <h2>May the Force be with you!</h2>\r\n          </div>\r\n          <p>Click on View Pilots to see who has piloted each starship.</p>\r\n        </div>\r\n        {this.state.starships.map((item) => (\r\n          <Starship\r\n            key={item.name}\r\n            item={item}\r\n            name={item.name}\r\n            pilots={item.pilots}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Starships;\r\n","import Axios from 'axios';\r\n\r\nexport default function getStarships() {\r\n  return Axios.get('https://swapi.dev/api/starships/');\r\n}","import React from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport Starships from \"./components/Starships\";\n\nfunction App() {\n  return (\n      <div className=\"container\">\n        <Header />\n        <Starships />\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}